/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.37
 * Generated at: 2016-12-06 11:54:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.menu.vender;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class vender_005fweddingHall_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".map_wrap, .map_wrap * {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tfont-family: 'Malgun Gothic', dotum, '돋움', sans-serif;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".map_wrap a, .map_wrap a:hover, .map_wrap a:active {\r\n");
      out.write("\tcolor: #000;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".map_wrap {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 500px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("\tmargin: 10px 0 30px 10px;\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("\toverflow-y: auto;\r\n");
      out.write("\tbackground: rgba(255, 255, 255, 0.7);\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bg_white {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap hr {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\theight: 1px;\r\n");
      out.write("\tborder: 0;\r\n");
      out.write("\tborder-top: 2px solid #5F5F5F;\r\n");
      out.write("\tmargin: 3px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap .option {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap .option p {\r\n");
      out.write("\tmargin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap .option button {\r\n");
      out.write("\tmargin-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList li {\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tborder-bottom: 1px solid #888;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmin-height: 65px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item span {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tmargin-top: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item h5, #placesList .item .info {\r\n");
      out.write("\ttext-overflow: ellipsis;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\twhite-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .info {\r\n");
      out.write("\tpadding: 10px 0 10px 55px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .info .gray {\r\n");
      out.write("\tcolor: #8a8a8a;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .info .jibun {\r\n");
      out.write("\tpadding-left: 26px;\r\n");
      out.write("\tbackground:\r\n");
      out.write("\t\turl(http://i1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png)\r\n");
      out.write("\t\tno-repeat;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .info .tel {\r\n");
      out.write("\tcolor: #009900;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .markerbg {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 36px;\r\n");
      out.write("\theight: 37px;\r\n");
      out.write("\tmargin: 10px 0 0 10px;\r\n");
      out.write("\tbackground:\r\n");
      out.write("\t\turl(http://i1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png)\r\n");
      out.write("\t\tno-repeat;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_1 {\r\n");
      out.write("\tbackground-position: 0 -10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_2 {\r\n");
      out.write("\tbackground-position: 0 -56px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_3 {\r\n");
      out.write("\tbackground-position: 0 -102px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_4 {\r\n");
      out.write("\tbackground-position: 0 -148px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_5 {\r\n");
      out.write("\tbackground-position: 0 -194px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_6 {\r\n");
      out.write("\tbackground-position: 0 -240px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_7 {\r\n");
      out.write("\tbackground-position: 0 -286px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_8 {\r\n");
      out.write("\tbackground-position: 0 -332px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_9 {\r\n");
      out.write("\tbackground-position: 0 -378px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_10 {\r\n");
      out.write("\tbackground-position: 0 -423px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_11 {\r\n");
      out.write("\tbackground-position: 0 -470px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_12 {\r\n");
      out.write("\tbackground-position: 0 -516px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_13 {\r\n");
      out.write("\tbackground-position: 0 -562px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_14 {\r\n");
      out.write("\tbackground-position: 0 -608px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_15 {\r\n");
      out.write("\tbackground-position: 0 -654px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pagination {\r\n");
      out.write("\tmargin: 10px auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pagination a {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pagination .on {\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcursor: default;\r\n");
      out.write("\tcolor: #777;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/menu/vender/vender_modal/vender_inquire_modal.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("<!-- \t<div style=\"background-color: white; height: 100px; width: 100%;\"></div> -->\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<img alt=\"\"\r\n");
      out.write("\t\t\tsrc=\"/wedding/resources/gallery/system_back02.jpg\"\r\n");
      out.write("\t\t\talign=\"middle\">\r\n");
      out.write("<!-- \t\t\tsrc=\"/wedding/resources/vender_gallery/vender_weddingHall_back01.png\" -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<h2 style=\"color: black;\">WeddingHall</h2>\r\n");
      out.write("\t<blockquote>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<mark>웨딩홀 이름</mark>\r\n");
      out.write("\t\t\t혹은 근처\r\n");
      out.write("\t\t\t<mark>지역</mark>\r\n");
      out.write("\t\t\t을 검색해주세요!\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<form onsubmit=\"searchPlaces(); return false;\" style=\"color: black;\"\r\n");
      out.write("\t\t\tclass=\"form-inline\">\r\n");
      out.write("\t\t\t<img\r\n");
      out.write("\t\t\t\tsrc=\"/wedding/resources/vender_gallery/vender_weddingHall_icon02.png\">\r\n");
      out.write("\t\t\t검색 : <input type=\"text\" id=\"keyword\" size=\"15\" class=\"form-control\">\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-info\">\r\n");
      out.write("\t\t\t\t<span class=\"glyphicon glyphicon-search\"></span>Search\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</blockquote>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"map_wrap\">\r\n");
      out.write("\t\t<div id=\"map\"\r\n");
      out.write("\t\t\tstyle=\"width: 72%; height: 100%; position: relative; left: 320px; overflow: hidden;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"menu_wrap\" class=\"bg_white\"\r\n");
      out.write("\t\t\tstyle=\"width: 290px; background: rgba(240, 120, 100, 0.1); height: 500px;\">\r\n");
      out.write("\t\t\t<div class=\"option\">\r\n");
      out.write("\t\t\t\t<div></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("\t\t\t<p align=\"center\" style=\"color: black;\">\r\n");
      out.write("\t\t\t\t<img\r\n");
      out.write("\t\t\t\t\tsrc=\"/wedding/resources/vender_gallery/vender_weddingHall_icon01.png\">\r\n");
      out.write("\t\t\t\t<abbr title=\"World Health Organization\" style=\"font-size: 17px\">검색\r\n");
      out.write("\t\t\t\t\t목록</abbr> <img\r\n");
      out.write("\t\t\t\t\tsrc=\"/wedding/resources/vender_gallery/vender_weddingHall_icon01.png\">\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<ul id=\"placesList\"></ul>\r\n");
      out.write("\t\t\t<div id=\"pagination\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"//apis.daum.net/maps/maps3.js?apikey=22264b9a0cc3f771f8c5320d49fbb2d7&libraries=services\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t// 마커를 담을 배열입니다\r\n");
      out.write("\tvar markers = [];\r\n");
      out.write("\r\n");
      out.write("\tvar mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("\tmapOption = {\r\n");
      out.write("\t\tcenter : new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("\t\tlevel : 3\r\n");
      out.write("\t// 지도의 확대 레벨\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t// 지도를 생성합니다    \r\n");
      out.write("\tvar map = new daum.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\r\n");
      out.write("\t// 장소 검색 객체를 생성합니다\r\n");
      out.write("\tvar ps = new daum.maps.services.Places();\r\n");
      out.write("\r\n");
      out.write("\t// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n");
      out.write("\tvar infowindow = new daum.maps.InfoWindow({\r\n");
      out.write("\t\tzIndex : 1\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t// 키워드로 장소를 검색합니다\r\n");
      out.write("\tsearchPlaces();\r\n");
      out.write("\r\n");
      out.write("\t// 키워드 검색을 요청하는 함수입니다\r\n");
      out.write("\tfunction searchPlaces() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar keyword = document.getElementById('keyword').value + \"웨딩홀\";\r\n");
      out.write("\r\n");
      out.write("\t\tif (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n");
      out.write("\t\t\talert('키워드를 입력해주세요!');\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n");
      out.write("\t\tps.keywordSearch(keyword, placesSearchCB);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n");
      out.write("\tfunction placesSearchCB(status, data, pagination) {\r\n");
      out.write("\t\tif (status === daum.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 정상적으로 검색이 완료됐으면\r\n");
      out.write("\t\t\t// 검색 목록과 마커를 표출합니다\r\n");
      out.write("\t\t\tdisplayPlaces(data.places);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 페이지 번호를 표출합니다\r\n");
      out.write("\t\t\tdisplayPagination(pagination);\r\n");
      out.write("\r\n");
      out.write("\t\t} else if (status === daum.maps.services.Status.ERROR) {\r\n");
      out.write("\r\n");
      out.write("\t\t\talert('검색 결과 중 오류가 발생했습니다.');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("\tfunction displayPlaces(places) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar listEl = document.getElementById('placesList'), menuEl = document\r\n");
      out.write("\t\t\t\t.getElementById('menu_wrap'), fragment = document\r\n");
      out.write("\t\t\t\t.createDocumentFragment(), bounds = new daum.maps.LatLngBounds(), listStr = '';\r\n");
      out.write("\r\n");
      out.write("\t\t// 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("\t\tremoveAllChildNods(listEl);\r\n");
      out.write("\r\n");
      out.write("\t\t// 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("\t\tremoveMarker();\r\n");
      out.write("\r\n");
      out.write("\t\tfor (var i = 0; i < places.length; i++) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("\t\t\tvar placePosition = new daum.maps.LatLng(places[i].latitude,\r\n");
      out.write("\t\t\t\t\tplaces[i].longitude), marker = addMarker(placePosition, i), itemEl = getListItem(\r\n");
      out.write("\t\t\t\t\ti, places[i], marker); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("\t\t\t// LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("\t\t\tbounds.extend(placePosition);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("\t\t\t// 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\t\t\t// mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("\t\t\t(function(marker, title) {\r\n");
      out.write("\t\t\t\tdaum.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("\t\t\t\t\tdisplayInfowindow(marker, title);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tdaum.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\t\t\t\t\tinfowindow.close();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\titemEl.onmouseover = function() {\r\n");
      out.write("\t\t\t\t\tdisplayInfowindow(marker, title);\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\titemEl.onmouseout = function() {\r\n");
      out.write("\t\t\t\t\tinfowindow.close();\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t})(marker, places[i].title);\r\n");
      out.write("\r\n");
      out.write("\t\t\tfragment.appendChild(itemEl);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("\t\tlistEl.appendChild(fragment);\r\n");
      out.write("\t\tmenuEl.scrollTop = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t// 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("\t\tmap.setBounds(bounds);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("\tfunction getListItem(index, places) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar el = document.createElement('li'), itemStr = '<span class=\"markerbg marker_'\r\n");
      out.write("\t\t\t\t+ (index + 1)\r\n");
      out.write("\t\t\t\t+ '\"></span>'\r\n");
      out.write("\t\t\t\t+ '<div class=\"info\" style=\"color:black;\">'\r\n");
      out.write("\t\t\t\t+ '   <h5>'\r\n");
      out.write("\t\t\t\t+ places.title + '</h5>';\r\n");
      out.write("\r\n");
      out.write("\t\tif (places.newAddress) {\r\n");
      out.write("\t\t\titemStr += '    <span>' + places.newAddress + '</span>'\r\n");
      out.write("\t\t\t\t\t+ '   <span class=\"jibun gray\">' + places.address\r\n");
      out.write("\t\t\t\t\t+ '</span>';\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\titemStr += '    <span>' + places.address + '</span>';\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\titemStr += '  <span class=\"tel\">' + places.phone + '</span>' \r\n");
      out.write("\t\t\t\t+ '<a href=\"\" class=\"bg-warning\" onclick=\"javascript:goInquire()\">업체문의</a>　'\r\n");
      out.write("\t\t\t\t+ '<a href=\"\" class=\"bg-warning\" onclick=\"javascript:weddingHallIn()\">등록하기</a>　'\r\n");
      out.write("\t\t\t\t+ '</div>';\r\n");
      out.write("\r\n");
      out.write("\t\tel.innerHTML = itemStr;\r\n");
      out.write("\t\tel.className = 'item';\r\n");
      out.write("\r\n");
      out.write("\t\treturn el;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("\tfunction addMarker(position, idx, title) {\r\n");
      out.write("\t\tvar imageSrc = 'http://i1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n");
      out.write("\t\timageSize = new daum.maps.Size(36, 37), // 마커 이미지의 크기\r\n");
      out.write("\t\timgOptions = {\r\n");
      out.write("\t\t\tspriteSize : new daum.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n");
      out.write("\t\t\tspriteOrigin : new daum.maps.Point(0, (idx * 46) + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t\t\toffset : new daum.maps.Point(13, 37)\r\n");
      out.write("\t\t// 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n");
      out.write("\t\t}, markerImage = new daum.maps.MarkerImage(imageSrc, imageSize,\r\n");
      out.write("\t\t\t\timgOptions), marker = new daum.maps.Marker({\r\n");
      out.write("\t\t\tposition : position, // 마커의 위치\r\n");
      out.write("\t\t\timage : markerImage\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tmarker.setMap(map); // 지도 위에 마커를 표출합니다\r\n");
      out.write("\t\tmarkers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("\r\n");
      out.write("\t\treturn marker;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("\tfunction removeMarker() {\r\n");
      out.write("\t\tfor (var i = 0; i < markers.length; i++) {\r\n");
      out.write("\t\t\tmarkers[i].setMap(null);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmarkers = [];\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("\tfunction displayPagination(pagination) {\r\n");
      out.write("\t\tvar paginationEl = document.getElementById('pagination'), fragment = document\r\n");
      out.write("\t\t\t\t.createDocumentFragment(), i;\r\n");
      out.write("\r\n");
      out.write("\t\t// 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("\t\twhile (paginationEl.hasChildNodes()) {\r\n");
      out.write("\t\t\tpaginationEl.removeChild(paginationEl.lastChild);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfor (i = 1; i <= pagination.last; i++) {\r\n");
      out.write("\t\t\tvar el = document.createElement('a');\r\n");
      out.write("\t\t\tel.href = \"#\";\r\n");
      out.write("\t\t\tel.innerHTML = i;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (i === pagination.current) {\r\n");
      out.write("\t\t\t\tel.className = 'on';\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tel.onclick = (function(i) {\r\n");
      out.write("\t\t\t\t\treturn function() {\r\n");
      out.write("\t\t\t\t\t\tpagination.gotoPage(i);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t})(i);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tfragment.appendChild(el);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tpaginationEl.appendChild(fragment);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n");
      out.write("\t// 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\tfunction displayInfowindow(marker, title) {\r\n");
      out.write("\t\tvar content = '<div style=\"padding:5px;z-index:1;color:black;\">'\r\n");
      out.write("\t\t\t\t+ title + '</div>';\r\n");
      out.write("\r\n");
      out.write("\t\tinfowindow.setContent(content);\r\n");
      out.write("\t\tinfowindow.open(map, marker);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("\tfunction removeAllChildNods(el) {\r\n");
      out.write("\t\twhile (el.hasChildNodes()) {\r\n");
      out.write("\t\t\tel.removeChild(el.lastChild);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
